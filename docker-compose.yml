version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: triage-db
    environment:
      POSTGRES_DB: triage
      POSTGRES_USER: triage
      POSTGRES_PASSWORD: triage_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma:/docker-entrypoint-initdb.d
    networks:
      - triage-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: triage-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - triage-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: triage-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://triage:triage_password@postgres:5432/triage
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      LEMONFOX_API_KEY: ${LEMONFOX_API_KEY}
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - '3001:3001'
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - triage-network
    command: npm start

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: triage-frontend
    environment:
      VITE_API_URL: ${VITE_API_URL}
      VITE_APP_URL: ${VITE_APP_URL}
    ports:
      - '3000:3000'
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - triage-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: triage-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - triage-network

volumes:
  postgres_data:
  redis_data:

networks:
  triage-network:
    driver: bridge
